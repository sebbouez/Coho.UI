import{_ as n,o as s,c as a,e}from"./app-e0605d3e.js";const t={},c=e(`<h1 id="build-custom-search-provider-for-the-omnibar" tabindex="-1"><a class="header-anchor" href="#build-custom-search-provider-for-the-omnibar" aria-hidden="true">#</a> Build custom search provider for the Omnibar</h1><p>The <code>ApplicationWindow</code> provides an Omnibar search bar in the window chrome title bar. By default it will search through the ribbon commands to provide the user a quick and easy access.<br> You can extend this feature by adding you own search provider. For example, you may want to help your users to find files in a project, or any other item that your application manages.<br> This article will help you create and register a new search provider for the built-in omnibar search.</p><h2 id="the-service-class" tabindex="-1"><a class="header-anchor" href="#the-service-class" aria-hidden="true">#</a> The service class</h2><p>Your custom search provider must inherit from <code>OmnibarSearchServiceBase</code>.<br> This is a typical content of a custom search provider:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomOmnibarSearchService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">OmnibarSearchServiceBase</span></span>
<span class="token punctuation">{</span>
    <span class="token comment">// The text that will be displayed in the drop down popup</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DisplayName
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;Search in files...&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// The icon that will be shown next to the text above</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name">Brush</span> Icon
    <span class="token punctuation">{</span>
        <span class="token keyword">get</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Brushes<span class="token punctuation">.</span>Transparent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// The results to show after the user has launched your search provider</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>OmnibarSearchResult<span class="token punctuation">&gt;</span></span> <span class="token function">ExecuteSearch</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> terms<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Perform your search operation using the argument &quot;terms&quot; that contains the text typed by the user.</span>
        <span class="token comment">// Then return the list of results.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once registered, this search provider will look like this:<br><img width="328" alt="image" src="https://user-images.githubusercontent.com/39953434/235304626-fed7a404-ef62-4d0c-8efd-8f5df7ef9f95.png"></p><h2 id="register-your-service-provider" tabindex="-1"><a class="header-anchor" href="#register-your-service-provider" aria-hidden="true">#</a> Register your service provider</h2><p>To make the application know your custom search provider, you have to register it using the <code>OmnibarSearchService.RegisterOmnibarSearchService()</code> method in the <code>Window_Loaded</code> event.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MainWindow_Loaded</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">RoutedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
    <span class="token comment">// Register your custom service in the Window_Loaded event</span>
    OmnibarSearchService<span class="token punctuation">.</span><span class="token function">RegisterOmnibarSearchService</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CustomOmnibarSearchService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="handle-the-search-result-click" tabindex="-1"><a class="header-anchor" href="#handle-the-search-result-click" aria-hidden="true">#</a> Handle the search result click</h2><p>After the search, when the user clicks a result in the drop down list, the event <code>OmnibarSearchService.SearchResultClicked</code> is raised. You can listen to it to perform the corresponding action.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MainWindow_Loaded</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">RoutedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
    OmnibarSearchService<span class="token punctuation">.</span><span class="token function">RegisterOmnibarSearchService</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CustomOmnibarSearchService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Add this line to handle the click event on a search result.</span>
    OmnibarSearchService<span class="token punctuation">.</span>SearchResultClicked <span class="token operator">+=</span> OmnibarSearchServiceOnSearchResultClicked<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OmnibarSearchServiceOnSearchResultClicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">OmnibarSearchResult</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Do something with the result that the user has selected.</span>
    MessageBox<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;You clicked &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>CommandTabName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),i=[c];function o(r,p){return s(),a("div",null,i)}const u=n(t,[["render",o],["__file","omnibar-search-provider.html.vue"]]);export{u as default};

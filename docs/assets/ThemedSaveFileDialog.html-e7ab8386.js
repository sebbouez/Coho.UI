import{_ as n,o as s,c as a,e}from"./app-47cf4121.js";const t={},o=e(`<h1 id="themedsavefiledialog-dialog" tabindex="-1"><a class="header-anchor" href="#themedsavefiledialog-dialog" aria-hidden="true">#</a> ThemedSaveFileDialog dialog</h1><p>The <code>ThemedSaveFileDialog</code> is a dialog that replaces the default <code>SaveFileDialog</code> using the current theme.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><p>None.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="show-string-message-string-title-messageboxbutton-button" tabindex="-1"><a class="header-anchor" href="#show-string-message-string-title-messageboxbutton-button" aria-hidden="true">#</a> Show(string message, string title, MessageBoxButton button)</h3><p>Shows a modal dialog using the current theme. Returns a <code>MessageBoxResult</code> that represents the choice of the user.</p><h4 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments" aria-hidden="true">#</a> Arguments</h4><ul><li><code>string</code> message : The message to display</li><li><code>string</code> title : The title of the dialog</li><li><code>MessageBoxButton</code> button : The buttons to display</li></ul><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><p>None.</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example 1</h3><p>This example shows how to use the <code>ThemedMessageBox</code> from C# and handle the result.</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> filePath <span class="token operator">=</span> ThemedOpenFileDialog<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token string">&quot;Open file&quot;</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token punctuation">{</span><span class="token string">&quot;All supported file types (*.md;*.pwdp)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.md;*.pwdp&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                        <span class="token punctuation">{</span><span class="token string">&quot;Markdown file (*.md)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.md&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                        <span class="token punctuation">{</span><span class="token string">&quot;PowerDocs Project file (*.pwdp)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.pwdp&quot;</span><span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> 
                    <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                    <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// open the selected file in your application</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),i=[o];function p(c,l){return s(),a("div",null,i)}const d=n(t,[["render",p],["__file","ThemedSaveFileDialog.html.vue"]]);export{d as default};

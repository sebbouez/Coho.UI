import{_ as i,r as o,o as d,c as r,a as e,b as a,d as s,w as h,e as n}from"./app-e0605d3e.js";const l={},c=e("h1",{id:"themedspecialdialogoptions-class",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#themedspecialdialogoptions-class","aria-hidden":"true"},"#"),a(" ThemedSpecialDialogOptions class")],-1),p=e("code",null,"ThemedOpenFileDialog",-1),f=n('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="defaultheight" tabindex="-1"><a class="header-anchor" href="#defaultheight" aria-hidden="true">#</a> DefaultHeight</h3><p>Type: <code>int</code><br> Default value: <code>650</code><br> The <strong>DefaultHeight</strong> property defines the initial height of the dialog in pixels.</p><h3 id="defaultwidth" tabindex="-1"><a class="header-anchor" href="#defaultwidth" aria-hidden="true">#</a> DefaultWidth</h3><p>Type: <code>int</code><br> Default value: <code>920</code><br> The <strong>DefaultWidth</strong> property defines the initial width of the dialog in pixels.</p><h3 id="filetypes" tabindex="-1"><a class="header-anchor" href="#filetypes" aria-hidden="true">#</a> FileTypes</h3><p>Type: <code>Dictionary&lt;string, string&gt;</code><br> Default value: <code>default</code><br> The <strong>FileTypes</strong> property defines the extensions that are supported by the dialog.</p><h3 id="initialdirectory" tabindex="-1"><a class="header-anchor" href="#initialdirectory" aria-hidden="true">#</a> InitialDirectory</h3><p>Type: <code>string</code><br> Default value: <code>String.Empty</code><br> The <strong>InitialDirectory</strong> property defines the first folder to show when the dialog is opened.</p><h3 id="showdefaultspecialfolders" tabindex="-1"><a class="header-anchor" href="#showdefaultspecialfolders" aria-hidden="true">#</a> ShowDefaultSpecialFolders</h3><p>Type: <code>bool</code><br> Default value: <code>true</code><br> The <strong>ShowDefaultSpecialFolders</strong> property defines if the special folders (Documents, Images, Videos...) section will be displayed. This property has no effect if the <code>ShowNavigationPane</code> property is set to <code>false</code>.</p><h3 id="shownavigationpane" tabindex="-1"><a class="header-anchor" href="#shownavigationpane" aria-hidden="true">#</a> ShowNavigationPane</h3><p>Type: <code>bool</code><br> Default value: <code>true</code><br> The <strong>ShowNavigationPane</strong> property defines if the navigation pane (on the left side) will be displayed.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><p>None.</p><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><p>None.</p>',17);function u(g,b){const t=o("RouterLink");return d(),r("div",null,[c,e("p",null,[a("This class is used to configure the behavior of the "),s(t,{to:"/dialogs/ThemedOpenFileDialog.html"},{default:h(()=>[p]),_:1}),a(" dialog.")]),f])}const T=i(l,[["render",u],["__file","ThemedSpecialDialogOptions.html.vue"]]);export{T as default};

import{_ as o,r as a,o as u,c as d,a as e,b as n,d as l,w as s,e as i}from"./app-47cf4121.js";const c={},r=e("h1",{id:"localize-default-strings",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#localize-default-strings","aria-hidden":"true"},"#"),n(" Localize default strings")],-1),p=e("p",null,"Coho.UI comes with default texts in English. You can however customize them to improve your UX.",-1),h=e("h2",{id:"table-of-default-strings",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-default-strings","aria-hidden":"true"},"#"),n(" Table of default strings")],-1),m=e("thead",null,[e("tr",null,[e("th",null,"Class name"),e("th",null,"Property name"),e("th",null,"Default value"),e("th",null,"Description")])],-1),_=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"Copy")]),e("td",null,"Copy"),e("td",null,'The text used to perform the "copy to clipboard" action')],-1),x=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"Cut")]),e("td",null,"Cut"),e("td",null,'The text used to perform the "cut to clipboard" action')],-1),g=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"Paste")]),e("td",null,"Paste"),e("td",null,'The text used to perform the "paste from clipboard" action')],-1),b=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"SelectAll")]),e("td",null,"Select all"),e("td",null,'The text used to perform the "select all content" action')],-1),k=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"Ok")]),e("td",null,"OK"),e("td",null,"The text used that is displayed in the Ok buttons in dialogs")],-1),T=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"Yes")]),e("td",null,"Yes"),e("td",null,"The text used that is displayed in the Yes buttons in dialogs")],-1),f=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"No")]),e("td",null,"No"),e("td",null,"The text used that is displayed in the No buttons in dialogs")],-1),v=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"HelpGenericHint")]),e("td",null,"Press F1 to get help."),e("td",null,"The text used in the Omnibar results and in the ribbon/QAT buttons tooltips")],-1),C=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.GenericText")]),e("td",null,[e("code",null,"MoreOptions")]),e("td",null,"More options"),e("td",null,"The text used in various contexts when other options are available to the user")],-1),y=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.OmnibarTexts")]),e("td",null,[e("code",null,"NoResult")]),e("td",null,"No result found."),e("td",null,"The text used when the omnibar search did not return any result")],-1),I=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.OmnibarTexts")]),e("td",null,[e("code",null,"PlaceholderText")]),e("td",null,"Search or type a command"),e("td",null,"The text used as a placeholder when the focus is not set to the omnibar")],-1),O=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.OmnibarTexts")]),e("td",null,[e("code",null,"ResultsCommandsGroupName")]),e("td",null,"Commands"),e("td",null,"The text used to group results in the omnibar results popup")],-1),U=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.OmnibarTexts")]),e("td",null,[e("code",null,"ResultsOtherServices")]),e("td",null,"Other searches..."),e("td",null,"The text used to group results in the omnibar results popup")],-1),w=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.OmnibarTexts")]),e("td",null,[e("code",null,"ResultsInFiles")]),e("td",null,"Results found in files"),e("td",null,"The text used to group results in the omnibar results popup")],-1),G=e("tr",null,[e("td",null,[e("code",null,"Coho.UI.OmnibarTexts")]),e("td",null,[e("code",null,"SearchInFiles")]),e("td",null,"Search in files..."),e("td",null,'The text used to start the "Find in files" command')],-1),F=e("td",null,[e("code",null,"Coho.UI.DialogsText")],-1),z=e("td",null,[e("code",null,"Open")],-1),R=e("td",null,"Open",-1),D=e("td",null,[e("code",null,"Coho.UI.DialogsText")],-1),N=e("td",null,[e("code",null,"FileName")],-1),S=e("td",null,"File name",-1),Y=e("td",null,[e("code",null,"Coho.UI.DialogsText")],-1),L=e("td",null,[e("code",null,"FolderParentLevel")],-1),P=e("td",null,"Parent",-1),E=i(`<h2 id="customize-strings" tabindex="-1"><a class="header-anchor" href="#customize-strings" aria-hidden="true">#</a> Customize strings</h2><p>You can easily change the default values using your own strings.</p><p>This example shows how to change text using a static value:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnLoaded</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">RoutedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Coho<span class="token punctuation">.</span>UI<span class="token punctuation">.</span>GenericText<span class="token punctuation">.</span>Yes <span class="token operator">=</span> <span class="token string">&quot;YES!&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This example shows how to change text using your own localized strings:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnLoaded</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">RoutedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Localization.Resources is the class name of your RESX generated class</span>
    Coho<span class="token punctuation">.</span>UI<span class="token punctuation">.</span>GenericText<span class="token punctuation">.</span>Yes <span class="token operator">=</span> Localization<span class="token punctuation">.</span>Resources<span class="token punctuation">.</span>GenericYes<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function A(V,B){const t=a("RouterLink");return u(),d("div",null,[r,p,h,e("table",null,[m,e("tbody",null,[_,x,g,b,k,T,f,v,C,y,I,O,U,w,G,e("tr",null,[F,z,R,e("td",null,[n("The text of the default button of the "),l(t,{to:"/dialogs/ThemedOpenFileDialog.html"},{default:s(()=>[n("ThemedOpenFileDialog")]),_:1})])]),e("tr",null,[D,N,S,e("td",null,[n("The text next to the file name textbox in the "),l(t,{to:"/dialogs/ThemedOpenFileDialog.html"},{default:s(()=>[n("ThemedOpenFileDialog")]),_:1})])]),e("tr",null,[Y,L,P,e("td",null,[n("The text of the browse top folder button in the "),l(t,{to:"/dialogs/ThemedOpenFileDialog.html"},{default:s(()=>[n("ThemedOpenFileDialog")]),_:1})])])])]),E])}const q=o(c,[["render",A],["__file","localize-strings.html.vue"]]);export{q as default};

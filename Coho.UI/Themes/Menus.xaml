<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:menus="clr-namespace:Coho.UI.Controls.Menus">


    <Style TargetType="{x:Type ContextMenu}" x:Key="LegacyContextMenuStyle">
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <menus:ContextMenuHolder>
                        <Border Margin="20">
                            <Border.Effect>
                                <DropShadowEffect Color="{DynamicResource ShadowColor}" Opacity="0.6" Direction="-90"
                                                  BlurRadius="20" ShadowDepth="4" />
                            </Border.Effect>
                            <Border Padding="2" BorderThickness="1" BorderBrush="{DynamicResource WindowBorder}"
                                    CornerRadius="4" Background="{DynamicResource MenuBackground}">
                                <StackPanel IsItemsHost="True" Margin="0"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Border>
                    </menus:ContextMenuHolder>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
                            <Setter Property="FontFamily" Value="{DynamicResource AppFont}" />
                            <Setter Property="FontSize" Value="{DynamicResource AppFontSize}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border x:Name="Border" CornerRadius="4"
                                                Background="{TemplateBinding Background}">
                                            <Grid Margin="5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto"
                                                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition x:Name="Col3" Width="auto" MinWidth="4" />
                                                </Grid.ColumnDefinitions>

                                                <!-- ContentPresenter to show an Icon if needed -->
                                                <ContentPresenter Visibility="Visible" Grid.Column="0" Margin="6,0,6,0"
                                                                  x:Name="Icon" VerticalAlignment="Center"
                                                                  ContentSource="Icon" />

                                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0"
                                                      x:Name="GlyphPanel" VerticalAlignment="Center">
                                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center"
                                                          Fill="{TemplateBinding Foreground}"
                                                          Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                                          FlowDirection="LeftToRight" />
                                                </Grid>

                                                <Border Grid.Column="1">
                                                    <!-- Content for the menu text etc -->
                                                    <ContentPresenter
                                                        Margin="{TemplateBinding Padding}"
                                                        x:Name="HeaderHost"
                                                        RecognizesAccessKey="True"
                                                        VerticalAlignment="Center"
                                                        ContentSource="Header" />
                                                </Border>
                                                <!-- Content for the menu IGT -->

                                                <Border Grid.Column="2">
                                                    <ContentPresenter
                                                        x:Name="IGTHost"
                                                        TextBlock.FontFamily="{DynamicResource AppFont}"
                                                        TextBlock.Foreground="{DynamicResource AltForeground}"
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="Right"
                                                        ContentSource="InputGestureText"
                                                        VerticalAlignment="Center" />
                                                </Border>

                                                <!-- Arrow drawn path which points to the next level of the menu -->
                                                <Grid Grid.Column="3" x:Name="ArrowPanel" VerticalAlignment="Center">
                                                    <Rectangle x:Name="IconArrow"
                                                               Fill="{DynamicResource IconChevronRight}" Width="10"
                                                               Height="10" Margin="0,0,4,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center" />
                                                </Grid>

                                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                                <Popup AllowsTransparency="True"
                                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                       HorizontalOffset="5" VerticalOffset="-3"
                                                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Placement="Right" x:Name="SubMenuPopup" Focusable="false">

                                                    <Border Margin="16" x:Name="SubMenuBorder">
                                                        <Border.Effect>
                                                            <DropShadowEffect Color="{DynamicResource ShadowColor}"
                                                                              Opacity="0.6" Direction="-90"
                                                                              BlurRadius="20" ShadowDepth="4" />
                                                        </Border.Effect>

                                                        <Border Padding="2" CornerRadius="4" BorderThickness="1"
                                                                BorderBrush="{DynamicResource WindowBorder}"
                                                                x:Name="SubMenu" MinWidth="180"
                                                                Background="{DynamicResource MenuBackground}">
                                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                                            <StackPanel IsItemsHost="True"
                                                                        Background="{DynamicResource MenuBackground}"
                                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                        </Border>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </Border>

                                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                                        <ControlTemplate.Triggers>
                                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                                            <Trigger Property="Role" Value="TopLevelHeader">
                                                <Setter Property="Padding" Value="4" />
                                                <Setter Property="VerticalOffset" Value="2" TargetName="SubMenuPopup" />
                                                <Setter Property="HorizontalOffset" Value="-5"
                                                        TargetName="SubMenuPopup" />
                                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                                                <Setter Property="MinWidth" Value="0" TargetName="Col0" />
                                                <Setter Property="MinWidth" Value="0" TargetName="Col3" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="IconArrow" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                                <Setter Property="Fill" Value="{DynamicResource IconChevronDown}"
                                                        TargetName="IconArrow" />
                                                <Setter Property="Width" Value="8" TargetName="IconArrow" />
                                                <Setter Property="Height" Value="8" TargetName="IconArrow" />
                                                <Setter Property="CornerRadius" Value="0" TargetName="Border" />
                                                <Setter TargetName="SubMenuBorder" Property="Border.Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="{DynamicResource ShadowColor}"
                                                                          Opacity="0.6" Direction="-90" BlurRadius="10"
                                                                          ShadowDepth="4" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>

                                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                                            <Trigger Property="Role" Value="TopLevelItem">
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                            </Trigger>

                                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                                            <Trigger Property="Role" Value="SubmenuHeader">
                                                <Setter Property="DockPanel.Dock" Value="Top" />
                                                <!--<Setter Property="Padding" Value="4, 4, 4, 6"/>-->
                                                <Setter Property="Padding" Value="4" />
                                                <Setter TargetName="IGTHost" Property="Margin" Value="20, 4, 4, 6" />
                                            </Trigger>

                                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                                            <Trigger Property="Role" Value="SubmenuItem">
                                                <Setter Property="DockPanel.Dock" Value="Top" />
                                                <!--<Setter Property="Padding" Value="4, 4, 4, 6"/>-->
                                                <Setter Property="Padding" Value="4" />
                                                <Setter TargetName="IGTHost" Property="Margin" Value="20, 4, 4, 6" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                            </Trigger>

                                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                                <Setter Property="PopupAnimation" Value="None"
                                                        TargetName="SubMenuPopup" />
                                            </Trigger>

                                            <!-- If no Icon is present the we collapse the Icon Content -->
                                            <Trigger Property="Icon" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                            </Trigger>

                                            <!-- The GlyphPanel contains the CheckMark -->
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                            </Trigger>

                                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                                            <Trigger Property="IsHighlighted" Value="true">
                                                <!--<Setter Property="Background" Value="#094771" TargetName="Border"/>-->
                                                <!--<Setter Property="Background" Value="{DynamicResource HoverColor}" TargetName="Border"/>-->
                                                <!--<Setter Property="Foreground" Value="White"/>-->
                                            </Trigger>


                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </Trigger>

                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.Setters>
                                                    <Setter Property="Background" Value="{DynamicResource HoverColor}"
                                                            TargetName="Border" />
                                                </MultiTrigger.Setters>
                                            </MultiTrigger>


                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Role" Value="TopLevelHeader" />
                                                    <Condition Property="IsHighlighted" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.Setters>
                                                    <Setter Property="Background" Value="{DynamicResource ActiveColor}"
                                                            TargetName="Border" />
                                                </MultiTrigger.Setters>
                                            </MultiTrigger>


                                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                                            <Trigger Property="IsPressed" Value="true">
                                                <!--<Setter Property="Background" Value="#094771" TargetName="Border"/>-->
                                                <Setter Property="Background" Value="{DynamicResource ActiveColor}"
                                                        TargetName="Border" />
                                                <!--<Setter Property="Foreground" Value="White"/>-->
                                            </Trigger>

                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type menus:AcrylicContextMenu}">
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Popup.ClipToBounds" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="menus:AcrylicContextMenu">
                    <Border Padding="4" Background="#01ffffff">
                        <StackPanel IsItemsHost="True" MinWidth="280" Margin="0"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}" />
        <Setter Property="FontSize" Value="{DynamicResource AppFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" CornerRadius="4"
                            Background="{TemplateBinding Background}">
                        <Grid Margin="5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition x:Name="Col3" Width="auto" MinWidth="4" />
                            </Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Visibility="Visible" Grid.Column="0" Margin="6,0,6,0" x:Name="Icon"
                                              VerticalAlignment="Center" ContentSource="Icon" />

                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel"
                                  VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                      FlowDirection="LeftToRight" />
                            </Grid>

                            <Border Grid.Column="1">
                                <!-- Content for the menu text etc -->
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    x:Name="HeaderHost"
                                    RecognizesAccessKey="True"
                                    VerticalAlignment="Center"
                                    ContentSource="Header" />
                            </Border>
                            <!-- Content for the menu IGT -->

                            <Border Grid.Column="2">
                                <ContentPresenter
                                    x:Name="IGTHost"
                                    TextBlock.FontFamily="{DynamicResource AppFont}"
                                    TextBlock.Foreground="{DynamicResource AltForeground}"
                                    HorizontalAlignment="Right"
                                    ContentSource="InputGestureText"
                                    VerticalAlignment="Center" />
                            </Border>

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Rectangle x:Name="IconArrow" Fill="{DynamicResource IconChevronRight}" Width="10"
                                           Height="10" Margin="0,0,4,0" HorizontalAlignment="Right"
                                           VerticalAlignment="Center" />
                            </Grid>


                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <menus:AcrylicSubMenu AllowsTransparency="True"
                                                  PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                  HorizontalOffset="5" VerticalOffset="-3"
                                                  IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Placement="Right" x:Name="SubMenuPopup" Focusable="false">
                                <Border Padding="4" Background="#01ffffff">
                                    <!--<Border Padding="2" CornerRadius="4" BorderThickness="1" BorderBrush="{DynamicResource WindowBorder}" x:Name="SubMenu" MinWidth="180" Background="{DynamicResource MenuBackground}">-->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    <!--</Border>-->
                                    <!--</Border>-->
                                </Border>
                            </menus:AcrylicSubMenu>
                        </Grid>
                    </Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="4" />
                            <Setter Property="VerticalOffset" Value="2" TargetName="SubMenuPopup" />
                            <Setter Property="HorizontalOffset" Value="-5" TargetName="SubMenuPopup" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                            <Setter Property="MinWidth" Value="0" TargetName="Col0" />
                            <Setter Property="MinWidth" Value="0" TargetName="Col3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IconArrow" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Fill" Value="{DynamicResource IconChevronDown}" TargetName="IconArrow" />
                            <Setter Property="Width" Value="8" TargetName="IconArrow" />
                            <Setter Property="Height" Value="8" TargetName="IconArrow" />
                            <Setter Property="CornerRadius" Value="0" TargetName="Border" />
                            <!--<Setter TargetName="SubMenuBorder" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource ShadowColor}" Opacity="0.6" Direction="-90" BlurRadius="10" ShadowDepth="4" />
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <!--<Setter Property="Padding" Value="4, 4, 4, 6"/>-->
                            <Setter Property="Padding" Value="4" />
                            <Setter TargetName="IGTHost" Property="Margin" Value="20, 4, 4, 6" />
                        </Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <!--<Setter Property="Padding" Value="4, 4, 4, 6"/>-->
                            <Setter Property="Padding" Value="4" />
                            <Setter TargetName="IGTHost" Property="Margin" Value="20, 4, 4, 6" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>

                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <!--<Setter Property="Background" Value="#094771" TargetName="Border"/>-->
                            <!--<Setter Property="Background" Value="{DynamicResource HoverColor}" TargetName="Border"/>-->
                            <!--<Setter Property="Foreground" Value="White"/>-->
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource MenuItemHoverColor}"
                                        TargetName="Border" />
                                <!--<Setter Property="Background" Value="red" TargetName="Border"/>-->
                            </MultiTrigger.Setters>
                        </MultiTrigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsHighlighted" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource ActiveColor}" TargetName="Border" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>


                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Background" Value="#094771" TargetName="Border"/>-->
                            <Setter Property="Background" Value="{DynamicResource ActiveColor}" TargetName="Border" />
                            <!--<Setter Property="Foreground" Value="White"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
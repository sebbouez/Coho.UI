<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="BorderThickness" Value="0.55" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="TemplateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="CheckBoxBorder"
                                CornerRadius="4"
                                Width="20"
                                Height="20"
                                UseLayoutRounding="True" SnapsToDevicePixels="True"
                                BorderBrush="{DynamicResource ButtonBorderColor}"
                                BorderThickness="0.55"
                                Background="{DynamicResource WorkspaceBackground}"
                                HorizontalAlignment="Left"
                                Margin="1"
                                VerticalAlignment="Center">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Border.Style>
                            <Rectangle Fill="{DynamicResource IconTickWhite}" Width="12" Height="12" x:Name="MarkTick"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>

                        <ContentPresenter x:Name="ContentPresenter" Margin="8,0,0,0" Grid.Column="1" Focusable="False"
                                          HorizontalAlignment="Left" RecognizesAccessKey="True"
                                          VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource HoverColor}" />
                            <Setter Property="BorderBrush" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource AccentColor}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="CheckBoxBorder">
                                        <DoubleAnimation
                                            Duration="0:0:0.25"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.3" To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                            From="0" To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut"
                                                          Amplitude="0.4" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                            From="0" To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut"
                                                          Amplitude="0.4" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter Property="Visibility" TargetName="MarkTick" Value="Visible" />
                            <Setter Property="Background" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource AccentColor}" />
                            <Setter Property="BorderBrush" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource AccentColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="MarkTick" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="MarkTick" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource BorderColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CheckSwitch" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="BorderThickness" Value="0.55" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="TemplateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="CheckBoxBorder" CornerRadius="10" Width="40" Height="20"
                                UseLayoutRounding="True" SnapsToDevicePixels="True"
                                BorderBrush="{DynamicResource DefaultForeground}" BorderThickness="0.55"
                                Background="{DynamicResource SubMenuBackground}" HorizontalAlignment="Left" Margin="1"
                                VerticalAlignment="Top">
                            <Ellipse x:Name="Ellipse" Margin="4,0" HorizontalAlignment="Left"
                                     Fill="{DynamicResource DefaultForeground}" Width="12" Height="12" />
                        </Border>

                        <ContentPresenter x:Name="ContentPresenter" Margin="4,0,0,0" Grid.Column="1" Focusable="False"
                                          HorizontalAlignment="Left" RecognizesAccessKey="True"
                                          VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource HoverColor}" />
                            <Setter Property="BorderBrush" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource AccentColor}" />
                            <Setter Property="Fill" TargetName="Ellipse" Value="{DynamicResource AccentColor}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="HorizontalAlignment" TargetName="Ellipse" Value="Right" />
                            <Setter Property="Fill" TargetName="Ellipse" Value="White" />
                            <Setter Property="BorderBrush" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource AccentColor}" />
                            <Setter Property="Background" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource AccentColor}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" TargetName="CheckBoxBorder"
                                        Value="{DynamicResource AccentColorDark}" />
                                <Setter Property="BorderBrush" TargetName="CheckBoxBorder"
                                        Value="{DynamicResource AccentColorDark}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="{x:Null}" />
                        <Trigger Property="IsChecked" Value="False" />

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="CheckBoxBorder"
                                    Value="{DynamicResource BorderColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
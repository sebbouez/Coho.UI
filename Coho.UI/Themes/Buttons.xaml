<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:buttons="clr-namespace:Coho.UI.Controls.Buttons"
                    xmlns:common="clr-namespace:Coho.UI.Controls.Common"
                    xmlns:textResources="clr-namespace:Coho.UI">

    <Style x:Key="EmptyToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Container" CornerRadius="4"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentPresenter" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverColor}" TargetName="Container" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveColor}" TargetName="Container" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveColor}" TargetName="Container" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type buttons:FolderExplorerShortcutButton}">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type buttons:FolderExplorerShortcutButton}">
                    <Border x:Name="Container"
                            Margin="0, 0, 0, 0" 
                            ToolTipService.ShowOnDisabled="True"
                            MinWidth="{TemplateBinding MinWidth}"
                            UseLayoutRounding="True"
                            SnapsToDevicePixels="True" 
                            Background="Transparent" 
                            BorderThickness="0.55"
                            BorderBrush="Transparent"
                            Padding="24,6">
                        <StackPanel x:Name="stack" Orientation="Horizontal">
                            <Rectangle x:Name="icon"
                                       RenderOptions.EdgeMode="Aliased"
                                       RenderOptions.BitmapScalingMode="Linear"
                                       UseLayoutRounding="True"
                                       SnapsToDevicePixels="True"
                                       Fill="{TemplateBinding Icon}" Width="16" Height="16" />
                            <TextBlock x:Name="label" VerticalAlignment="Center" Margin="8,0,0,0" Text="{TemplateBinding Text}"></TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Container" Value="{DynamicResource HoverColor}" />
                            <Setter Property="BorderBrush" TargetName="Container" Value="{DynamicResource HoverColor}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Container" Value="{DynamicResource ActiveColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Container" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Container" Padding="{TemplateBinding Padding}"
                            CornerRadius="4" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentPresenter" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverColor}" TargetName="Container" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveColor}" TargetName="Container" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="buttons:ChromeTitleButton">
        <Setter Property="MinWidth" Value="36" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type buttons:ChromeTitleButton}">
                    <Border x:Name="Container" Background="Transparent" BorderThickness="0.55"
                            SnapsToDevicePixels="True" UseLayoutRounding="True" BorderBrush="Transparent"
                            CornerRadius="4" MinWidth="{TemplateBinding MinWidth}">
                        <ContentPresenter x:Name="ContentPresenter" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WorkspaceBackground}" TargetName="Container" />
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" TargetName="Container" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveColor}" TargetName="Container" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NormalButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="Background" Value="{DynamicResource MenuBackground}" />
        <Setter Property="Padding" Value="13, 0" />
        <Setter Property="BorderThickness" Value="0.55" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="FontSize" Value="{DynamicResource AppFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonOuterFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Container"
                            UseLayoutRounding="True"
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource ButtonBorderColor}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            HorizontalAlignment="Stretch">
                        <Border Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="0,-1,0,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Container" Value="{DynamicResource HoverColor}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter Property="Background" TargetName="Container" Value="{DynamicResource ActiveColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Container" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="white" />
        <Setter Property="TextBlock.FontWeight" Value="SemiBold" />
        <Setter Property="Background" Value="{DynamicResource AccentColor}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="BorderThickness" Value="0.55" />
        <Setter Property="Padding" Value="13,0" />
        <Setter Property="FontSize" Value="{DynamicResource AppFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonOuterFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Container"
                            UseLayoutRounding="True"
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource AccentColor}"
                            BorderBrush="{DynamicResource AccentButtonBorderColor}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            HorizontalAlignment="Stretch">
                        <Border Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding  Content}" Margin="0,-1,0,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Container"
                                    Value="{DynamicResource AccentColorDark}" />
                            <Setter Property="BorderBrush" TargetName="Container"
                                    Value="{DynamicResource AccentColorDark}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="true">
                            <Setter Property="Background" TargetName="Container"
                                    Value="{DynamicResource AccentColorDarker}" />
                            <Setter Property="BorderBrush" TargetName="Container"
                                    Value="{DynamicResource AccentColorDarker}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Container" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource AccentColor}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock x:Name="linkText" TextWrapping="Wrap" HorizontalAlignment="Left">
                        <ContentPresenter />
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Foreground" Value="{DynamicResource AccentColorDark}" />-->
                            <Setter TargetName="linkText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorDark}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type buttons:MasterAccentSplitButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonOuterFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type buttons:MasterAccentSplitButton}">

                    <Border HorizontalAlignment="Left" x:Name="BtnContainer">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" x:Name="BtnLeftPart">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background" Value="{DynamicResource AccentColor}" />
                                        <Setter Property="FocusVisualStyle"
                                                Value="{DynamicResource ButtonOuterFocusVisual}" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border CornerRadius="4,0,0,4" Padding="12,8"
                                                            Background="{TemplateBinding Background}">
                                                        <ContentPresenter />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource AccentColorDark}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource AccentColorDarker}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Fill="{TemplateBinding Icon}" Width="12" Height="12" />
                                    <TextBlock Margin="6,-1,0,0" FontWeight="SemiBold" Foreground="White" FontSize="14"
                                               Text="{TemplateBinding Text}" />
                                </StackPanel>
                            </Button>
                            <ToggleButton Grid.Column="1" ToolTip="{x:Static textResources:GenericText.MoreOptions}"
                                          x:Name="BtnDropDownPart">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Background" Value="{DynamicResource AccentColor}" />
                                        <Setter Property="FocusVisualStyle"
                                                Value="{DynamicResource ButtonOuterFocusVisual}" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border CornerRadius="0,4,4,0" Padding="8,2,8,0"
                                                            Margin="0.55,0,0,0"
                                                            Background="{TemplateBinding Background}">
                                                        <Rectangle Fill="{DynamicResource IconChevronDownWhite}"
                                                                   Width="10" Height="10" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource AccentColorDark}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource AccentColorDarker}" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{DynamicResource AccentColorDarker}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <common:DropDownPopup Grid.Column="0" Grid.ColumnSpan="2" x:Name="DropDownPopupPart">
                                <ContentPresenter
                                    Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                         AncestorType={x:Type buttons:MasterAccentSplitButton}},
                                                         Path=DropDownContent, UpdateSourceTrigger=Default}" />
                            </common:DropDownPopup>


                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>